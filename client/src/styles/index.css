/* Base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
        Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    background-color: #f0f2f5;
    color: #1c1e21;
    line-height: 1.5;
}

/* App container */
.app-container {
    max-width: 1280px;
    margin: 0 auto;
    padding: 20px;
    display: grid;
    grid-template-rows: auto 1fr;
    gap: 24px;
    min-height: 100vh;
}

/* Video interface */
.video-interface {
    background-color: #fff;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    padding: 24px;
    overflow: hidden;
}

.video-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 24px;
    aspect-ratio: 16/9;
    background-color: #1c1e21;
    border-radius: 8px;
    overflow: hidden;
}

.user-video,
.ai-video {
    width: 100%;
    height: 100%;
    object-fit: cover;
    background-color: #000;
}

/* Chat interface */
.chat-interface {
    background-color: #fff;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    overflow: hidden;
}

.messages-container {
    flex: 1;
    padding: 24px;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
    gap: 12px;
}

.message {
    max-width: 80%;
    padding: 12px 16px;
    border-radius: 16px;
    word-break: break-word;
}

.user-message {
    background-color: #0084ff;
    color: #fff;
    align-self: flex-end;
    border-bottom-right-radius: 4px;
}

.ai-message {
    background-color: #f0f2f5;
    color: #1c1e21;
    align-self: flex-start;
    border-bottom-left-radius: 4px;
}

.input-container {
    padding: 16px 24px;
    border-top: 1px solid #e4e6eb;
    display: flex;
    gap: 12px;
}

.input-container input {
    flex: 1;
    padding: 12px 16px;
    border: 1px solid #e4e6eb;
    border-radius: 24px;
    font-size: 16px;
    outline: none;
    transition: border-color 0.2s;
}

.input-container input:focus {
    border-color: #0084ff;
}

.input-container button {
    padding: 8px 24px;
    background-color: #0084ff;
    color: #fff;
    border: none;
    border-radius: 20px;
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.2s;
}

.input-container button:hover {
    background-color: #0073e6;
}

.input-container button:disabled {
    background-color: #e4e6eb;
    cursor: not-allowed;
}

/* Connection status */
.connection-status {
    padding: 8px 16px;
    background-color: #f0f2f5;
    border-radius: 8px;
    margin-bottom: 16px;
    font-size: 14px;
    display: flex;
    align-items: center;
    gap: 8px;
}

.connection-status.connected {
    background-color: #ecfdf3;
    color: #027a48;
}

.connection-status.disconnected {
    background-color: #fef3f2;
    color: #b42318;
}

/* Responsive design */
@media (max-width: 768px) {
    .app-container {
        padding: 12px;
        gap: 16px;
    }

    .video-container {
        grid-template-columns: 1fr;
        gap: 16px;
    }

    .message {
        max-width: 90%;
    }

    .input-container {
        padding: 12px 16px;
    }

    .input-container input {
        padding: 8px 12px;
        font-size: 14px;
    }

    .input-container button {
        padding: 8px 16px;
        font-size: 14px;
    }
}

/* Animations */
@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes slideUp {
    from { transform: translateY(20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
}

.message {
    animation: fadeIn 0.3s ease-out, slideUp 0.3s ease-out;
}

/* Loading states */
.loading {
    position: relative;
    overflow: hidden;
}

.loading::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.4),
        transparent
    );
    animation: loading 1.5s infinite;
}

@keyframes loading {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
}